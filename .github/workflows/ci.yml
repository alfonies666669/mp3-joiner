name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-test:
    name: Lint, Format Check & Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest isort black pylint

      - name: Run Black Check
        run: black --check tools tests app.py

      - name: Run isort Check
        run: isort --check-only tools tests app.py

      - name: Run Pylint
        run: pylint tools tests app.py
        continue-on-error: true

      - name: Run Pytest
        run: pytest -v

  docker-build-test:
    name: Build & Test Docker Image
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU (for multiarch, можно пропустить если не нужен ARM)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t test-mp3-joiner .

      - name: Run container & basic healthcheck
        run: |
          docker run -d --rm -p 5001:5001 --name mp3joiner test-mp3-joiner
          sleep 5
          curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:5001/ | grep 200

      - name: Stop container
        if: always()
        run: docker stop mp3joiner
