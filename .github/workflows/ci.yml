name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-lint:
    name: Tests + Coverage + Linters
    runs-on: ubuntu-latest

    env:
      SECRET_KEY: test-secret
      API_TOKENS_REQUIRED: "false"
      ALLOWED_ORIGIN: http://localhost

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pytest-cov

      - name: Pytest (with coverage)
        run: |
          pytest -v --maxfail=1 \
            --cov=tools --cov=app --cov=logger \
            --cov-report=term-missing \
            --cov-report=xml:coverage.xml
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: Black (check)
        run: black --check tools tests app.py

      - name: isort (check)
        run: isort --check-only tools tests app.py

      - name: Ruff (lint+format check)
        run: |
          ruff check .
          ruff format --check .

      - name: Pylint (project files only)
        run: |
          pylint app.py tools logger tests --jobs=2

  docker-build-test:
    name: Docker build & smoke test
    runs-on: ubuntu-latest
    needs: test-and-lint

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: mp3-joiner:test

      - name: Run container
        run: |
          docker run -d --rm -p 5001:5001 --name mp3joiner \
            -e SECRET_KEY=test \
            mp3-joiner:test
          sleep 5
          curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:5001/ | grep 200
          curl -s http://127.0.0.1:5001/healthz | jq .
        shell: bash

      - name: Stop container
        if: always()
        run: docker stop mp3joiner
