name: Deploy to VPS

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Image tag to deploy (e.g. v1.0.0 or latest)"
        required: true
        default: "latest"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        env:
          TAG: ${{ github.event.inputs.image_tag }}
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.USER }}@${{ secrets.HOST }} <<'REMOTE'
          set -euo pipefail
          GHCR_USER="${{ secrets.GHCR_USERNAME }}"
          GHCR_TOKEN="${{ secrets.GHCR_TOKEN }}"
          SECRET_KEY="${{ secrets.SECRET_KEY }}"
          ALLOWED_ORIGIN="${{ secrets.ALLOWED_ORIGIN }}"
          REPO="${{ github.repository }}"
          TAG="${TAG:-latest}"

          APP_DIR="/mp3-joiner"
          mkdir -p "${APP_DIR}/logs"
          cd "${APP_DIR}"

          if [ -n "${GHCR_USER}" ] && [ -n "${GHCR_TOKEN}" ]; then
            echo "${GHCR_TOKEN}" | docker login ghcr.io -u "${GHCR_USER}" --password-stdin
          fi

          IMAGE="ghcr.io/${REPO}:${TAG}"
          echo "Using image: ${IMAGE}"

          cat > docker-compose.prod.yml <<'YML'
          version: "3.9"
          services:
            app:
              image: ${IMAGE}
              container_name: mp3-joiner
              ports:
                - "5001:5001"
              env_file:
                - .env
              volumes:
                - ${APP_DIR}/logs:/var/logs/mp3_joiner
                - ${HOME}/mp3-tokens:/app/tokens:ro
              restart: unless-stopped
              healthcheck:
                test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:5001/healthz || exit 1"]
                interval: 30s
                timeout: 5s
                retries: 3
          YML

          cat > .env <<ENV
          SECRET_KEY=${SECRET_KEY}
          ALLOWED_ORIGIN=${ALLOWED_ORIGIN}
          API_TOKENS_REQUIRED=true
          GEO_LOOKUP_ENABLED=false
          ENV

          export IMAGE="${IMAGE}"
          export APP_DIR="${APP_DIR}"

          docker compose -f docker-compose.prod.yml pull
          docker compose -f docker-compose.prod.yml up -d

          sleep 3
          code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:5001/healthz || true)
          if [ "$code" != "200" ]; then
            echo "Healthcheck failed with code $code"
            echo "Running containers:"
            docker ps -a
            echo "Logs:"
            docker logs mp3-joiner || true
            exit 1
          fi

          echo "Deploy OK"
          REMOTE
