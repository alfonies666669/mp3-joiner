name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with: { python-version: "3.13" }
      - run: python -m pip install -U pip
      - run: pip install -r requirements.txt -r requirements-dev.txt pytest-cov
      - run: pytest -v --cov=tools --cov=app --cov=logger --cov-report=term-missing --cov-report=xml

  docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Extract version
        id: v
        run: echo "ver=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # GHCR login
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login Docker Hub
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (GHCR + Docker Hub)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.v.outputs.ver }}
            ${{ secrets.DOCKERHUB_USERNAME && format('{0}/mp3-joiner:latest', secrets.DOCKERHUB_USERNAME) || '' }}
            ${{ secrets.DOCKERHUB_USERNAME && format('{0}/mp3-joiner:{1}', secrets.DOCKERHUB_USERNAME, steps.v.outputs.ver) || '' }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.version=${{ steps.v.outputs.ver }}
            org.opencontainers.image.title=mp3-joiner

  gh-release:
    needs: [ test, docker ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
